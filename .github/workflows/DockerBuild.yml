name: DockerBuild

on:
  workflow_dispatch:
  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        
      - name: Creates stagin directory and copy .war
        run: |
          mkdir staging
          cp target/*.war staging/
      - name: Publish Artifact
        uses: actions/upload-artifact@v3
        with:
          name: web-app
          path: staging
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: mspriya92/java-web-app:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
           name: web-app
           path: staging
      - name: Pull Tomcat image
        run: docker pull bitnami/tomcat:latest  # Or another Windows-compatible image (adjust tag if needed)
     
      - name: Run Tomcat container
        run: docker run -d --name tomcat-container -p 8080:8080 bitnami/tomcat:latest  # Detached mode (-d), expose port

      - name: Pull your application image 
        run: docker pull mspriya92/java-web-app:latest

      - name: Copy WAR file to Tomcat webapps
        run: |
          docker cp staging/*.war tomcat-container:/bitnami/tomcat/webapps/

      - name: Check if Tomcat is running
        run: |
          sleep 30
          curl -I http://localhost:8080 || exit 1
      - name: Check if my app is deployed
        run: curl -I http://localhost:8080/myapp || exit 1
       
      #- name: Run your application container
        #run: docker run -d -p 8081:8080 mspriya92/java-web-app:latest  # Detached mode (-d), map port (adjust if needed)
        #run: docker run -d -p 8080:8080 -v mspriya92/java-web-app:latest:/usr/local/tomcat/webapps bitnami/tomcat:latest
        #run: docker run -d -p 8080:8080 -v java-web-app:/usr/local/tomcat/webapps bitnami/tomcat:latest
     
