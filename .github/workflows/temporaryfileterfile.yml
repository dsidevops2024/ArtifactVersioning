name: jsonfilter

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose the env to deploy (Dev or Prod)?'
        required: true
        type: string
      Filters:
        description: 'Choose the required component'
        required: true
        type: choice
        options:
          - com1
          - com2
          - com3

jobs:
  copy_files:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    outputs:
      components-info: ${{ steps.set-matrix.outputs.backend-components }}  # No correction needed
      filteredDataFile: ${{ steps.filter-step.outputs.filteredDataFile }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set matrix data
        id: set-matrix
        working-directory: ./job_dependencies
        run: |
          echo "backend-components=`perl -pe 's/\s+//g' job_dependencies.json`" >> $GITHUB_OUTPUT
          echo "$backend-components"
      - name: Filtering JSON data
        id: filter-step
        run: |
          chosencomponents="${{ github.event.inputs.Filters }}"
          filteredData=$(jq -c --arg chosenCom "$chosencomponents" '.[] | select(.name == $chosenCom) | tojson' job_dependencies/job_dependencies.json)
          echo "$filteredData" > filtered_data.json  # Write to temporary file
          echo "::set-output name=filteredDataFile::filtered_data.json"

  Comparison:
    runs-on: ubuntu-latest
    needs: copy_files
    strategy:
      matrix:
        components: ${{ fromJSON(needs.copy_files.outputs.components-info) }}
      # Access the temporary file and parse its content
        filters: ${{ fromJSON(files.filtered_data.content) }}  # Assuming content is JSON
    # ... (rest of your Comparison job)

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: filtered-data  # Optional name for the artifact
          path: filtered_data.json  # Download path
      - name: Accessing filtered data (optional)
        run: |
          echo "Filtered Data (JSON): ${{ files.filtered_data.content }}"
          # Access specific properties if needed (assuming the data structure allows it)
          # echo "Filter Name: ${{ fromJSON(files.filtered_data.content).name }}"
          # echo "Filter Version: ${{ fromJSON(files.filtered_data.content).version }}"
