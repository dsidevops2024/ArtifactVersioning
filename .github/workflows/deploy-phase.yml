name: Deploy Phase
on:
  workflow_call:
    inputs:
      component:
        type: string
        required: true
      environment:
        type: string
        required: true
      runner:
        type: string
        required: true
    outputs:
      phase-status:
        value: ${{ jobs.phase-status.outputs.phaseop }}
      comp-status-phase1:
        #value: ${{ jobs.Phase1.outputs.compstatus }}
        value: ${{ jobs.deploy-single-component.outputs.compstatus }}
      comp-status-phase2:
        #value: ${{ jobs.Phase2.outputs.compstatus }}
        value: ${{ jobs.deploy-phase-one.outputs.compstatus }}
      comp-status-phase3:
        #value: ${{ jobs.Phase3.outputs.compstatus }}
        value: ${{ jobs.deploy-phase-two.outputs.compstatus }}
        
jobs:
  check-approvals:
    runs-on: ubuntu-latest
    steps:
      - name: Approval step
        id: step2  # We add an ID for job2
        run: |
          echo "Approval-check=Test for approval" 
  deploy-single-component:
    if: ${{ ! contains(inputs.component, 'fullstack') }}
    uses: ./.github/workflows/deploy-component.yml
    with: 
      component: ${{ inputs.component }}
      environment: ${{ inputs.environment }}
      runner: ${{ inputs.runner }}

  
  #Phase2:
  deploy-phase-one:
    if: ${{  inputs.component == 'fullstack' }}
    uses: ./.github/workflows/deploy-component.yml
    with: 
      component: ${{ inputs.component }}
      environment: ${{ inputs.environment }}
      runner: ${{ inputs.runner }}

  #Phase3:
  deploy-phase-two:
    if: ${{  inputs.component == 'fullstack' }}
    needs: deploy-phase-one
    uses: ./.github/workflows/deploy-component.yml
    with: 
      component: ${{ inputs.component }}
      environment: ${{ inputs.environment }}
      runner: ${{ inputs.runner }}
      
  phase-status:
    needs: [check-approvals,deploy-single-component, deploy-phase-one, deploy-phase-two]
    if: always()
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs: 
      #phase1op: ${{ steps.report.outputs.Phase1status }}
      #phase2op: ${{ steps.report.outputs.Phase2status }}
      phaseop: ${{ steps.report.outputs.Phasestatus }}
          
    steps:
      - name: Report job statuses
        id: report
        run: |
          #echo "Phase1status=${{ needs.Phase1.result }}" >> $GITHUB_OUTPUT
          #echo "Phase2status=${{ needs.Phase2.result }}" >> $GITHUB_OUTPUT
          #echo "comp1status:${{ needs.Phase1.outputs.compstatus1 }}" 
          #echo "comp2status:${{ needs.Phase1.outputs.compstatus2 }}" 
          #echo "comp01status:${{ needs.Phase2.outputs.compstatus1 }}" 
          #echo "comp02status:${{ needs.Phase2.outputs.compstatus2 }}"

          #Phasestatus="phase 1 status: ${{ needs.Phase1.result }}, " 
          #Phasestatus+="phase 2 status: ${{ needs.Phase2.result }}, "
          #Phasestatus+="phase 3 status: ${{ needs.Phase3.result }}"
          Phasestatus="check-approvals status: ${{ needs.check-approvals.result }}, "
          Phasestatus+="deploy-single-component status: ${{ needs.deploy-single-component.result }}, " 
          Phasestatus+="deploy-phase-one status: ${{ needs.deploy-phase-one.result }}, "
          Phasestatus+="deploy-phase-two status: ${{ needs.deploy-phase-two.result }}"
          echo "Phasestatus=$Phasestatus" >> $GITHUB_OUTPUT  
          
