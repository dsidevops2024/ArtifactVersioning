name: SphereTargetEnv Workflow
 
on:
  workflow_dispatch:
    inputs:
      component:
        description: 'Input the component to deploy full stack?'
        required: true
        type: string
      environment:
        description: 'Choose  env to deploy (Dev or Prod)?'
        required: true
        type: choice
        options:
          - dev
          - prod
      prod_sub_env:
        description: 'specify the client you want to deploy'
        required: false
        type: string
        default: 'all'
             
jobs:
  create-environment-matrix:
     runs-on: ubuntu-latest
     
     outputs:
      env: ${{ steps.env-matix.outputs.env }}
     steps: 
      - name: Checkout Repository
        uses: actions/checkout@v3 
      - name: Get environment input and create matrix
        id: env-matrix
        shell: bash
        run: |
          if [[ "${{ inputs.environment }}" == "prod" ]]; then
            if [[ "${{ inputs.prod_sub_env }}" == "all" ]]; then
               echo "env=`cat ./client-manifests/${{ inputs.environment }}-clients.json | jq -c`" >> $GITHUB_OUTPUT
               #echo "env=`cat ./client-manifests/${{ inputs.environment }}-clients.json | jq -c`"
            else 
              selected_env="${{ inputs.prod_sub_env }}"
              matching_env=$(jq -c ".[] | select(.env == \"$selected_env\")" ./client-manifests/prod-clients.json)
 
              if [[ -z "$matching_env" ]]; then
                 echo "Error: No matching environment found for '${{ inputs.environment }}'"
                 exit 1
              else
                 echo "env=$matching_env" >> $GITHUB_OUTPUT
                 echo "env=$matching_env"
              fi
            fi  
          else
            echo "env=`cat ./client-manifests/${{ inputs.environment }}-clients.json | jq -c`" >> $GITHUB_OUTPUT
            
          fi
      - name: Print the selected environment
        run: |
          echo "Selected environment: ${{ steps.env-matrix.outputs.env }}"
           
  check-component-input:
     runs-on: ubuntu-latest
     needs: create-environment-matrix
     outputs:
      runner: ${{ steps.env-runner.outputs.runner }}
     steps: 
      - name: set runner group
        id: env-runner
        run: |
           if [[ "${{ inputs.environment }}" == "prod" ]]; then
           #&& -n "needs.create-environment-matrix.outputs.env" ]]; then
              echo "runner=prod" >> $GITHUB_OUTPUT
           else
              echo "runner=Nonprod" >> $GITHUB_OUTPUT
           fi
          
