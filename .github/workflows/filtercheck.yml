name: Filtercheck
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose the env to deploy (Dev or Prod)?'
        required: true
        type: string
      Filters:
        description: 'Choose the required component'
        required: true
        type: choice
        options:
          - com1
          - com2
          - com3

jobs:

  copy_files:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    outputs:
      components-info: ${{ steps.set-matrix.outputs.backend-components }}
      filter-info: ${{ steps.filter-step.outputs.filteredData }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set matrix data
        id: set-matrix
        working-directory: ./job_dependencies
        run: |
          echo "backend-components=`perl -pe 's/\s+//g' job_dependencies.json`" >> $GITHUB_OUTPUT

      - name: Filtering JSON data
        id: filter-step
        run: |
          #chosencomponents="${{ github.event.inputs.Filters }}"
          echo "filteredData=`cat ./job_dependencies.json | grep ${{ inputs. Filters }} -m1 -A5 |  perl -pe 's/\s+//g'`"  >> $GITHUB_OUTPUT
          echo "$filteredData"

  Comparison:
    runs-on: self-hosted
    needs: copy_files
    continue-on-error: true
    strategy:
      matrix:
        components: ${{ fromJSON(needs.copy_files.outputs.components-info) }}
        filters: ${{ fromJSON(needs.copy_files.outputs.filter-info) }}
        #fail-fast: false
        #max-parallel: 1
    env:
      name: ${{ matrix.components.name }}  # Access component name from matrix
      version: ${{ matrix.components.version }}  # Access component version from matrix
      name1: ${{ matrix.filters.name }}  # Access name property from filtered data
      version1: ${{ matrix.filters.version }}  # Access version property from filtered data

    steps:
      - name: Checking matrix value
        run: |
          echo "$name"
          echo "$version"
          echo "$name1"
          echo "$version1"
