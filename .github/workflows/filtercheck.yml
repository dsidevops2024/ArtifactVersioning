name: filtercheck Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose the env to deploy (Dev or Prod)?'
        required: true
        type: string
      filters:
        description: 'Choose the required Filter'
        required: true
        type: string  # Change the type to string as the options are strings

jobs:
  copy_files:
    runs-on: ubuntu-latest
    outputs:
      filteredData: ${{ steps.set-matrix.outputs.filteredData }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set matrix data
        id: set-matrix
        working-directory: ./job_dependencies
        run: |
          # Read the JSON data from the file
          json_data=$(<job_dependencies.json)
          
          # Decode the JSON data and filter based on the workflow_dispatch inputs
          filteredData=$(perl -MJSON -E '$data = decode_json($ENV{json_data}); foreach $item (@$data) { if ($item->{name} eq $ENV{INPUT_FILTERS}) { push(@filtered, $item); } } say encode_json(\@filtered);')
          
          # Set the filtered data as an output
          echo "::set-output name=filteredData::$filteredData"

  comparison:
    runs-on: ubuntu-latest
    needs: copy_files
    strategy:
      matrix:
        components: ${{fromJson(needs.copy_files.outputs.filteredData)}}
      fail-fast: false
      max-parallel: 1
    steps:
      - name: Checking matrix value
        run: |
          echo "Component: ${{ matrix.components }}"
