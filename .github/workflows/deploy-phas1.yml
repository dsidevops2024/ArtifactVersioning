name: Deploy Phas1
on:
  workflow_call:
    inputs:
      component:
        type: string
        required: true
      environment:
        type: string
        required: true
      runner:
        type: string
        required: true
    #outputs:
      #phase-status:
        #value: ${{ jobs.collect-status-new.outputs.phaseop }}
      #comp-status-phase1:
        #value: ${{ jobs.deploy-single-component.outputs.compstatus }}
      #comp-status-phase2:
        #value: ${{ jobs.deploy-phase-one.outputs.compstatus }}
      #comp-status-phase3:
        #value: ${{ jobs.deploy-phase-two.outputs.compstatus }}
        
jobs:
  check-approvals:
    runs-on: ubuntu-latest
    steps:
      - name: Approval step
        id: step2  # We add an ID for job2
        run: |
          echo "Approval-check=Test for approval" 
          
  deploy-single-component:
    needs: check-approvals
    if: ${{ ! contains(inputs.component, 'fullstack') }}
    uses: ./.github/workflows/deploy-comp1.yml
    with: 
      component: ${{ inputs.component }}
      environment: ${{ inputs.environment }}
      runner: ${{ inputs.runner }}

  deploy-phase-one:
    needs: check-approvals
    if: ${{  inputs.component == 'fullstack' }}
    uses: ./.github/workflows/deploy-comp1.yml
    with: 
      component: ${{ inputs.component }}
      environment: ${{ inputs.environment }}
      runner: ${{ inputs.runner }}

  deploy-phase-two:
    if: ${{  inputs.component == 'fullstack' }}
    needs: deploy-phase-one
    uses: ./.github/workflows/deploy-comp1.yml
    with: 
      component: ${{ inputs.component }}
      environment: ${{ inputs.environment }}
      runner: ${{ inputs.runner }}

  Reset-Approvals:
   needs: [check-approvals, deploy-single-component, deploy-phase-two]
   runs-on: ubuntu-latest
   if: ${{ always() }}
   steps:
      - name: reset step
        id: step2  # We add an ID for job2
        run: |
          echo "reset-check=Test for approval" 
