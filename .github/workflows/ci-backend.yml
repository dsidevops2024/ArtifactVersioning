name: ci-backend

on:
  #workflow_dispatch:
  workflow_call:
  push:
    paths:
      - 'backend/Receivers/**'
      - 'backend/Scheduler/**'

jobs:
  Changed-Files-JSON:
    runs-on: ubuntu-latest
    outputs:
      components: ${{ steps.json-format.outputs.components }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}

      - name: Get raw list of changed file paths
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "changed_files=$(git diff --name-only -r HEAD^1 HEAD | xargs)" >> $GITHUB_OUTPUT
          else
            echo "changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | xargs)" >> $GITHUB_OUTPUT
          fi

      - name: Map files to components
        id: json-format
        shell: bash
        run: |
          list=""

           for file in ${{ steps.changed-files.outputs.changed_files }}; do
             # Extract third path segment: backend/<group>/<component>/...
             component=$(echo "$file" | cut -d'/' -f3)
             #path="${file#backend/}" -old code
             #component="${path%%/*}" -old code
             if [[ -z "$component" ]]; then
               echo "Skipped file: $file (couldn't determine component)"
               continue
             fi

             jq_output=$(jq -c "map(select(.title==\"${component}\")) | first" backend/backend-components.json)
            
             if [[ "$jq_output" != "null" && -n "$jq_output" ]]; then
               list="${list}${jq_output},"
             else
              echo "No component found for $component"
             fi
             done

             # Wrap list in brackets, remove trailing comma, deduplicate by title
             list="[${list%,}]"
             components=$(echo "$list" | jq -c 'unique_by(.title)')

             echo "components=${components}" >> $GITHUB_OUTPUT
            echo "Detected components: $components"

  Build-Changed-Components:
    needs: Changed-Files-JSON
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ${{ fromJson(needs.Changed-Files-JSON.outputs.components) }}
    defaults:
      run:
        working-directory: backend/${{ matrix.component.srcPath }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install -DskipTests
      
      - name: Push backend comp to Artifactory (placeholder)
        run: |
          echo "Pushing backend artifact to Artifactory..."
