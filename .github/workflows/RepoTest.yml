name: RepoTest
on:
  workflow_dispatch:
    inputs:
      #folder-name:
        #description: Input the foldername
        #required: true
        #default: sb
      environment:
        description: Input the env
        required: true
        default: dev
      stage:
        description: Input the stage
        required: true
        default: dev
jobs:
  job1:
    runs-on: self-hosted
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        
      - name: Checking and delete sb Directory
        run: |
          # Extract repository name from the GitHub repository context
          $repoOwner = "${{ github.repository_owner }}"
          Write-Host "Repository Owner: $repoOwner"
          
          $repoName = "${{ github.repository }}" -split '/' | select -First 1
          Write-Host "Repository Name: $repoName"
          
          # Get the folder name from the input or use the default
          #$folderName = "${{ inputs.folder-name }}"
          $folderName = "${{ vars.FOLDER_NAME }}"
 
          # Construct the folder path dynamically using the repository name and folder name
          #$folderpath = "$env:GITHUB_WORKSPACE\$repoName\$repoName\$folderName"
          $folderpath = "$env:GITHUB_WORKSPACE\$folderName"
          Write-Host "Folder Path: $folderpath"
        shell: powershell

      - name: Extract branch name from JSON
        id: extract-branch
        shell: pwsh
        run: |
          $env:Path += ";C:\ProgramData\chocolatey\lib\jq\tools"
          $sb_branchname= jq -r '.[] | select(.binaryName == "SAAS-SPHEREboard.exe") | .sbrepobranch' component.json
          $configjsonpath= jq -r '.[] | select(.binaryName == "SAAS-SPHEREboard.exe") | .configjsonpath' component.json
          $jsonfilename= jq -r '.[] | select(.binaryName == "SAAS-SPHEREboard.exe") | .jsonfilename' component.json
        
          if (-not $sb_branchname -or -not $configjsonpath -or -not $jsonfilename) 
          {       
          Write-Output "One or more variables are empty"
          exit 1
          } 
          else 
          {
          Write-Output "::set-output name=sb_branchname::$sb_branchname"
          Write-Output "::set-output name=configjsonpath::$configjsonpath"
          Write-Output "::set-output name=jsonfilename::$jsonfilename"
          }   

  Check-Approvals:
      runs-on: ubuntu-latest
      environment: ${{ inputs.environment }}
      steps:
        - name: turn off review reqs on env
          if: ${{ inputs.stage == 'dev'}}
          run: |
           curl -L -X PUT -H "Accept: application/vnd.github+json" \
           -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
           -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/dsidevops2024/TrainBook/environments/${{ inputs.environment }}" \
           -d '{"reviewers":null, "wait_timer":0,"deployment_branch_policy":{"protected_branches":false,"custom_branch_policies":true}}'
