name: RepoTest
on:
  workflow_dispatch:
    inputs:
      #folder-name:
        #description: Input the foldername
        #required: true
        #default: sb
      environment:
        description: Input the env
        required: true
        default: dev
      stage:
        description: Input the stage
        required: true
        default: dev
jobs:
  job1:
    runs-on: self-hosted
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
       
      - name: Checking and delete sb Directory
        run: |
          # Extract repository name from the GitHub repository context
          $repoOwner = "${{ github.repository_owner }}"
          Write-Host "Repository Owner: $repoOwner"
          
          $repoName = "${{ github.repository }}" -split '/' | select -First 1
          Write-Host "Repository Name: $repoName"
          
          # Get the folder name from the input or use the default
          #$folderName = "${{ inputs.folder-name }}"
          $folderName = "${{ vars.FOLDER_NAME }}"
 
          # Construct the folder path dynamically using the repository name and folder name
          #$folderpath = "$env:GITHUB_WORKSPACE\$repoName\$repoName\$folderName"
          $folderpath = "$env:GITHUB_WORKSPACE\$folderName"
          Write-Host "Folder Path: $folderpath"
        shell: powershell
     
      - name: Extract branch name from JSON
        env:
          AZURE_CLI_PATH: ${{ vars.AZURE_CLI_PATH }}  # Use the environment variable for the Azure CLI path
        run: |
          $env:Path += ";$env:AZURE_CLI_PATH"  # Dynamically append the Azure CLI path
          Write-Host "Updated PATH: $env:Path"
          #$env:Path += ";C:\ProgramData\chocolatey\lib\jq\tools"
        shell: powershell
         
          
  check-component-input:
    needs: job1
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    outputs:
      component: ${{ steps.component-input.outputs.component }}
    steps:
      - name: checkout code
        uses: actions/checkout@v4 
      - name: check component input 
        id: component-input
        shell: bash
        run: |
          temp="${{ inputs.component }}"
          lower=${temp,,}
          if [[ "$lower" == "fullstack" ]]; then
            echo "component=fullstack" >> $GITHUB_OUTPUT
            echo "Deploying fullstack"
          else 
            comp=`jq '.[] | .componentName' component.json | grep -i "\<${{ inputs.component }}\>" -m1`
            lowercomp=${comp,,}
            if [[ $lowercomp == "\"${lower}\"" ]]; then
              echo "Deploying `cat ./component.json | grep -iF -o "${{ inputs.component }}" -m1`"
              echo "component=`cat ./component.json | grep -iF -o "${{ inputs.component }}" -m1`" >> $GITHUB_OUTPUT
            else
              echo "Error: Component '${{ inputs.component }}' not found in component.json"
              exit 1
            fi
          fi
          
  Check-Approvals:
      needs: [ job1, check-component-input ]
      runs-on: ubuntu-latest
      environment: ${{ inputs.environment }}
      steps:
        - name: turn off review reqs on env
          if: ${{ inputs.stage == 'dev'}}
          run: |
           curl -L -X PUT -H "Accept: application/vnd.github+json" \
           -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
           -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/dsidevops2024/TrainBook/environments/${{ inputs.environment }}" \
           -d '{"reviewers":null, "wait_timer":0,"deployment_branch_policy":{"protected_branches":false,"custom_branch_policies":true}}'
