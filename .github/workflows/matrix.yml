name: matrixcheck Workflow
 
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose the env to deploy (Dev or Prod)?'
        required: true
        type: string
 
jobs:
  filter_json:
    runs-on: ubuntu-latest
    steps:
      - name: Filter JSON based on input environment
        id: filter-json
        run: |
          # Read the input environment value
          inputEnv=${{ github.event.inputs.environment }}

          # Filter the JSON based on the input environment
          filteredJson=$(jq --arg inputEnv "$inputEnv" '.[] | select(.name == $inputEnv)' job_dependencies/job_dependencies.json)

          # Set the filtered JSON as an environment variable for further use
          echo "FILTERED_JSON=$filteredJson" >> $GITHUB_ENV

  use_filtered_json:
    runs-on: ubuntu-latest
    needs: filter_json
    steps:
      - name: Use the filtered JSON
        run: |
          # Access the filtered JSON from the environment variable
          filteredJson=$FILTERED_JSON
          echo "Filtered JSON: $filteredJson"
  copy_files:
    runs-on: ubuntu-latest
    needs: filter_json
    outputs:
      components-info: ${{ steps.set-matrix.outputs.backend-components }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3  
        
     
      - name: Set matrix data
        id: set-matrix
        working-directory: ./job_dependencies
        run: |
          echo "backend-components=`perl -pe 's/\s+//g' job_dependencies.json`" >> $GITHUB_OUTPUT
      #- name: Check env value
        #run: echo $component
    
  Comparison:
    runs-on: self-hosted
    needs: copy_files
    continue-on-error: true
    strategy:
      matrix:
         components: ${{ fromJSON(needs.copy_files.outputs.components-info) }}
      fail-fast: false
    env:
      name: ${{ matrix.components.name }}
      version: ${{ matrix.components.version }}
    steps:
      - name: checking matrix value
        run: |
          echo "$name"
          echo "$version"
          
