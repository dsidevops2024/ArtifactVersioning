name: "Update JSON_VERSIONS"
description: "Safely update the GitHub org-level JSON_VERSIONS variable without race conditions"
inputs:
  updated_json:
    description: "Partial JSON with component versions to merge"
    required: true
  github-token:
    description: 'GitHub Token'
    required: true
runs:
  using: "composite"
  steps:
    - name: Save input JSON to file
      shell: bash
      run: |
        echo '${{ inputs.updated_json }}' | jq . > update.json || {
          echo "❌ Invalid JSON:"
          echo '${{ inputs.updated_json }}'
          exit 1
        }
    
    - name: Fetch existing JSON_VERSIONS from GitHub
      shell: bash
      run: |
        EXISTING=$(gh variable get JSON_VERSIONS --org dsidevops2024 --json value -q .value)
        echo "${EXISTING:-{}}" > existing.json
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        #GH_TOKEN: ${{ secrets.AVPAT_TOKEN }}
    
    - name: Merge JSONs
      shell: bash
      run: |
        MERGED=$(jq -s '.[0] * .[1]' existing.json update.json)

        echo "Merged version JSON:"
        echo "$MERGED"

        echo "$MERGED" > merged.json

        # Validate merged
        echo "$MERGED" | jq . > /dev/null || {
          echo "❌ Merged JSON is invalid"
          cat merged.json
          exit 1
        }

        # Safely set the env variable
        ESCAPED=$(echo "$MERGED" | jq -c .)
        echo "MERGED_JSON=$ESCAPED" >> $GITHUB_ENV

    #- name: Merge JSONs
      #shell: bash
      #run: |
        #MERGED=$(jq -s '.[0] * .[1]' existing.json update.json)
        #echo "Merged version JSON: $MERGED"
        #echo "$MERGED" > merged.json
        #echo "MERGED_JSON=$MERGED" >> $GITHUB_ENV

    - name: Update JSON_VERSIONS
      shell: bash
      run: |
        gh variable set JSON_VERSIONS --org dsidevops2024 --body "$MERGED_JSON" --visibility all
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        
    #- name: Merge JSONs and set variable
      #shell: bash
      #run: |
        #MERGED=$(jq -s '.[0] * .[1]' existing.json update.json)
        #echo "Merged version JSON: $MERGED"
        #gh variable set JSON_VERSIONS --org dsidevops2024 --body "$MERGED" --visibility all
      #env:
        #GH_TOKEN: ${{ inputs.github-token }}
        #GH_TOKEN: ${{ secrets.AVPAT_TOKEN }}
