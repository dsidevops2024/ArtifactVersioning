name: 'Semantic Version Bump'
description: 'Bumps version from repo variable based on PR label'
inputs:
  component:
    description: "Component name"
    required: true
  versions-json:
    description: "JSON string containing versions"
    required: true
outputs:
  new_version:
    description: "The new version"
    value: ${{ steps.bump.outputs.new_version }}
runs:
  using: "composite"
  steps:
    - name: Get PR labels
      id: labels
      shell: bash
      run: |
        if [[ "${{ github.event_name }}" != "pull_request" ]]; then
          echo "labels=" >> "$GITHUB_OUTPUT"
          exit 0
        fi
        LABELS=$(jq -r '.pull_request.labels[].name' "$GITHUB_EVENT_PATH")
        echo "labels=$LABELS" >> "$GITHUB_OUTPUT"

    - name: Determine bump type
      id: type
      shell: bash
      run: |
        bump="patch"
        for label in $LABELS; do
          if [[ "$label" == "semver:major" ]]; then
            bump="major"
            break
          elif [[ "$label" == "semver:minor" ]]; then
            bump="minor"
          fi
        done
        echo "bump_type=$bump" >> "$GITHUB_OUTPUT"
      env:
        LABELS: ${{ steps.labels.outputs.labels }}

    - name: Bump version
      id: bump
      shell: bash
      run: |
        component="${{ inputs.component }}"
        json='${{ inputs.versions-json }}'

        current_version=$(echo "$json" | jq -r --arg comp "$component" '.[$comp]')
        if [[ -z "$current_version" || "$current_version" == "null" ]]; then
          echo "Component '$component' not found in versions-json"
          exit 1
        fi

        IFS='.' read -r major minor patch <<< "$current_version"

        case "${{ steps.type.outputs.bump_type }}" in
          major) ((major+=1)); minor=0; patch=0;;
          minor) ((minor+=1)); patch=0;;
          patch) ((patch+=1));;
        esac

        new_version="$major.$minor.$patch"
        echo "new_version=$new_version" >> "$GITHUB_OUTPUT"
        echo "Bumped $component to $new_version"
