param (
    [string]$controllerStatus,
    [string]$phaseStatus,
    [string]$compStatusPhase1,
    [string]$compStatusPhase2,
    [string]$compStatusPhase3
)

# Set controllerStatus as output
Add-Content -Path $env:GITHUB_OUTPUT -Value "controller-status=$controllerStatus"

# Process Controller Jobs Dynamically
$controllerMatches = [regex]::Matches($controllerStatus, "(\w+-\w+) status: (.*?)(,|$)")
foreach ($match in $controllerMatches) {
    $component = $match.Groups[1].Value
    $status = $match.Groups[2].Value
    Add-Content -Path $env:GITHUB_OUTPUT -Value "$component-status=$component status: $status"
}

# Set phaseStatus as output
Add-Content -Path $env:GITHUB_OUTPUT -Value "overall-phase-status=$phaseStatus"

# Process Phase Status Dynamically
$phaseMatches = [regex]::Matches($phaseStatus, "(\w+-\w+) status: (.*?)(,|$)")
foreach ($match in $phaseMatches) {
    $phase = $match.Groups[1].Value
    $status = $match.Groups[2].Value
    Add-Content -Path $env:GITHUB_OUTPUT -Value "${phase}_status=$phase status: $status"
}

# Associate phase jobs with respective statuses
$phaseJobMapping = @{
    "deploy-single-component" = $compStatusPhase1
    "deploy-phase-one"        = $compStatusPhase2
    "deploy-phase-two"        = $compStatusPhase3
}

# Process Component Status for Each Phase Dynamically
foreach ($phase in $phaseJobMapping.Keys) {
    $compStatus = $phaseJobMapping[$phase]
    Add-Content -Path $env:GITHUB_OUTPUT -Value "${phase}-status=$compStatus"

    if (-not $compStatus) {
        Add-Content -Path $env:GITHUB_OUTPUT -Value "${phase}-job1-status=create-component-matrix status: skipped"
        Add-Content -Path $env:GITHUB_OUTPUT -Value "${phase}-job2-status=deploy-to-AzService status: skipped"
    } else {
        # Extract all available job statuses dynamically
        $jobMatches = [regex]::Matches($compStatus, "(\w+-\w+) status: (.*?)(,|$)")
        foreach ($match in $jobMatches) {
            $jobName = $match.Groups[1].Value
            $jobStatus = $match.Groups[2].Value
            Add-Content -Path $env:GITHUB_OUTPUT -Value "${phase}-${jobName}-status=$jobName status: $jobStatus"
        }
    }
}
